{"version":3,"sources":["components/NavBar/NavBar.js","constants/constants.js","urls.js","axios.js","components/Banner/Banner.js","components/RowPost/RowPost.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","alt","API_KEY","imageUrl","originals","action","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","console","log","data","results","style","backgroundImage","backdrop_path","title","overview","RowPost","props","movies","setMovies","UrlId","setUrlId","url","catch","err","alert","map","obj","onClick","id","length","isSmall","videoId","key","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAgBeA,MAbf,WACI,OAAQ,sBACAC,UAAU,SADV,UAEJ,qBAAKA,UAAU,OACXC,IAAI,mHACJC,IAAI,iBACR,qBAAKF,UAAU,SACXC,IAAI,+EACJC,IAAI,eCVFC,G,MAAU,oCACVC,EAAW,sCCDZC,EAAU,uBAAD,OAAwBF,EAAxB,sBACTG,EAAM,iCAA4BH,EAA5B,mB,eCOFI,E,OAPAC,EAAMC,OAAO,CAC1BC,QFHoB,iC,MG+BTC,MA3Bf,WACI,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OANAC,qBAAU,WACNP,EAAMQ,IAAN,oCAAuCb,EAAvC,oBAAiEc,MAAK,SAACC,GACnEC,QAAQC,IAAIF,EAASG,KAAKC,QAAQ,IAClCR,EAASI,EAASG,KAAKC,QAAQ,SAEpC,IAEC,sBACAC,MAAO,CAACC,gBAAgB,OAAD,OAAQX,EAAQT,EAASS,EAAMY,cAAgB,GAA/C,MACvBzB,UAAU,SAFV,UAGI,sBAAKA,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBa,EAAQA,EAAMa,MAAM,KAC3C,sBAAK1B,UAAU,iBAAf,UACI,wBAAQA,UAAU,UAAlB,kBACA,wBAAQA,UAAU,UAAlB,wBAEJ,oBAAIA,UAAU,cAAd,SAA6Ba,EAAQA,EAAMc,SAAS,QAExD,qBAAK3B,UAAU,oB,gBC4BZ4B,MA/Cf,SAAiBC,GACb,MAA4BjB,mBAAS,IAArC,mBAAOkB,EAAP,KAAeC,EAAf,KACA,EAAyBnB,mBAAS,IAAlC,mBAAOoB,EAAP,KAAcC,EAAd,KA4BA,OA3BAlB,qBAAU,WACNP,EAAMQ,IAAIa,EAAMK,KAAKjB,MAAK,SAAAC,GACtBC,QAAQC,IAAIF,EAASG,MACrBU,EAAUb,EAASG,KAAKC,YACzBa,OAAM,SAAAC,GACLC,MAAM,sBAEX,IAqBC,sBAAKrC,UAAU,MAAf,UACI,6BAAK6B,EAAMH,QACX,qBAAK1B,UAAU,UAAf,SACK8B,EAAOQ,KAAI,SAACC,GAAD,OACR,qBAAKC,QAAS,kBAhBTC,EAgB2BF,EAAIE,GAfhDtB,QAAQC,IAAIqB,QACZjC,EAAMQ,IAAN,gBAAmByB,EAAnB,2BAAwCtC,EAAxC,8BACGc,MAAK,SAAAC,GAC8B,IAA/BA,EAASG,KAAKC,QAAQoB,OACrBT,EAASf,EAASG,KAAKC,QAAQ,IAE/BH,QAAQC,IAAI,kBAPJ,IAACqB,GAgBoCxC,IAAG,UAAKG,EAAWmC,EAAId,eAAiBvB,IAAI,SAASF,UAAW6B,EAAMc,QAAU,cAAgB,gBAMpJX,GAAa,cAAC,IAAD,CAASY,QAASZ,EAAMa,IAAKC,KA9BlC,CACTC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAERC,SAAU,UCJPC,MAXf,WACE,OACE,sBAAKnD,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAASkC,IAAK7B,EAAWqB,MAAM,sBAC/B,cAAC,EAAD,CAASQ,IAAK5B,EAAQoB,MAAM,SAASiB,SAAO,QCArCS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f33804a3.chunk.js","sourcesContent":["import React from 'react'\nimport \"./NavBar.css\"\n\nfunction NavBar() {\n    return (<\n        div className=\"navbar\" >\n        <img className=\"logo\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\n            alt=\"netflix logo\" />\n        <img className=\"avatar\"\n            src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\n            alt=\"avatar\" />\n        </div>\n    )\n}\n\nexport default NavBar"," export const baseUrl = 'https://api.themoviedb.org/3';\n export const API_KEY = \"92f2e48d0bc384203bf49754a6c2034a\";\n export const imageUrl = 'https://image.tmdb.org/t/p/original'\n ","import {API_KEY} from './constants/constants'\nexport const originals=`discover/tv?api_key=${API_KEY}&with_networks=213`\nexport const action =`discover/movie?api_key=${API_KEY}&with_genres=28`\n","import axios from 'axios'\nimport {baseUrl} from './constants/constants'\nconst instance = axios.create({\n    baseURL: baseUrl,\n   \n  });\n\n\n\n  export default instance","import React, { useEffect, useState} from 'react'\nimport {API_KEY, imageUrl} from '../../constants/constants'\nimport axios from '../../axios'\nimport './Banner.css'\nfunction Banner() {\n    const [movie, setMovie] = useState()\n    useEffect(() => {\n        axios.get(`trending/all/week?api_key=${API_KEY}&language=en-US`).then((response) => {\n            console.log(response.data.results[0])\n            setMovie(response.data.results[0])\n        })\n    }, [])\n    return (\n        <div  \n        style={{backgroundImage:`url(${movie ? imageUrl+movie.backdrop_path : \"\"})`}}\n        className=\"banner\">\n            <div className=\"content\">\n                <h1 className=\"title\">{movie ? movie.title:\"\"}</h1>\n                <div className=\"banner_buttons\">\n                    <button className=\"buttons\">play</button>\n                    <button className=\"buttons\">my list</button>\n                </div>\n                <h1 className=\"description\">{movie ? movie.overview:\"\"}</h1>\n            </div>\n            <div className=\"fade_bottom\">\n\n            </div>\n        </div>\n    )\n}\n\nexport default Banner\n","import React, { useEffect, useState } from 'react'\nimport './RowPost.css'\nimport YouTube from 'react-youtube'\nimport { imageUrl,API_KEY } from '../../constants/constants'\nimport axios from '../../axios'\nfunction RowPost(props) {\n    const [movies, setMovies] = useState([])\n    const [UrlId, setUrlId]= useState('')\n    useEffect(() => {\n        axios.get(props.url).then(response => {\n            console.log(response.data)\n            setMovies(response.data.results)\n        }).catch(err => {\n            alert('network error')\n        })\n    }, [])\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n            //   https://developers.google.com/youtube/player_parameters\n            autoplay: 1,\n        },\n    };\n    const handleMovie = (id) => {\n        console.log(id)\n        axios.get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US\n        `).then(response=>{\n            if(response.data.results.length!==0){\n                setUrlId(response.data.results[0])\n            }else{\n                console.log('array empty')\n            }\n        })\n    }\n    return (\n        <div className=\"row\">\n            <h2>{props.title}</h2>\n            <div className=\"posters\">\n                {movies.map((obj) =>\n                    <img onClick={() => handleMovie(obj.id)} src={`${imageUrl + obj.backdrop_path}`} alt=\"poster\" className={props.isSmall ? 'smallposter' : 'poster'} />\n                )\n                }\n\n\n            </div>\n       { UrlId &&     <YouTube videoId={UrlId.key} opts={opts} />}\n\n        </div>\n    )\n}\n\nexport default RowPost\n","import React from 'react'\nimport NavBar from './components/NavBar/NavBar'\nimport './App.css'\nimport {originals,action} from './urls'\nimport Banner from './components/Banner/Banner'\nimport RowPost from './components/RowPost/RowPost'\nfunction App() {\n  return (\n    <div className=\"App\">\n        <NavBar/>\n        <Banner/>\n        <RowPost url={originals} title='Netflix originals'/>\n        <RowPost url={action} title='Action' isSmall />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}